#Quarkus
quarkus.package.type=uber-jar

#common ------------------------------
#quarkus.log.level=TRACE

#cors
quarkus.http.cors=true
quarkus.http.cors.exposed-headers=errors, content-type

#hibernate
quarkus.hibernate-orm.log.sql=true
quarkus.datasource.min-size=3
quarkus.datasource.max-size=13
quarkus.hibernate-orm.database.charset=UTF-8
quarkus.hibernate-orm.database.generation=drop-and-create
# docker run --name petclinic -p 5432:5432 -e POSTGRES_PASSWORD=pass -d postgres
#quarkus.datasource.url=jdbc:postgresql://localhost:5432/postgres
#podman run -ti -n roach -p 26257:26257 -p 8081:8080  -v "./cockroach-data:/cockroach/cockroach-data:Z" cockroachdb/cockroach:v20.2.3 start-single-node --insecure
quarkus.datasource.url=jdbc:postgresql://localhost:26257/postgres
quarkus.datasource.username=root
quarkus.datasource.password=roach
quarkus.hibernate-orm.sql-load-script = import.sql
quarkus.datasource.driver=org.postgresql.Driver
quarkus.hibernate-orm.dialect=org.hibernate.dialect.CockroachDB201Dialect

#openapi
quarkus.swagger-ui.always-include=true

# security
quarkus.security.jdbc.enabled=true
quarkus.security.jdbc.principal-query.sql=SELECT u.password, r.role FROM users u JOIN roles r on (r.username = u.username) WHERE u.username=?
quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true
quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1
quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2
quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups


# test --------------------------------
%test.quarkus.hibernate-orm.sql-load-script = import-test.sql
%test.quarkus.datasource.url=jdbc:h2:tcp://localhost/mem:default
%test.quarkus.datasource.driver=org.h2.Driver
%test.quarkus.datasource.username=username-default
%test.quarkus.datasource.min-size=3
%test.quarkus.datasource.max-size=13
%test.quarkus.hibernate-orm.database.charset=UTF-8
%test.quarkus.hibernate-orm.log.sql=true
